<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cck.mapper.system.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.cck.model.system.SysRole" >
    <id column="rid" property="id" jdbcType="VARCHAR" /> <!---->
    <result column="role_code" property="role_code" jdbcType="VARCHAR" />
    <result column="role_name" property="role_name" jdbcType="VARCHAR" />
    <result column="sort_num" property="sort_num" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="parent_id" property="parent_id" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id rid, role_code, role_name, sort_num, create_time, parent_id
  </sql>

  <select id="findAllBySearch" resultType="Map" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from SYS_ROLE
    <where>
      <if test="search != null and search!=''">
        role_code like '%'||#{search}||'%'
        OR role_name like '%${search}%'
      </if>
    </where>
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cck.model.system.SysRole" >
    insert into sys_role (id, role_code, role_name, 
      sort_num, create_time, parent_id
      )
    values (#{id,jdbcType=VARCHAR}, #{role_code,jdbcType=VARCHAR}, #{role_name,jdbcType=VARCHAR}, 
      #{sort_num,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, #{parent_id,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cck.model.system.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="role_code != null" >
        role_code,
      </if>
      <if test="role_name != null" >
        role_name,
      </if>
      <if test="sort_num != null" >
        sort_num,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="role_code != null" >
        #{role_code,jdbcType=VARCHAR},
      </if>
      <if test="role_name != null" >
        #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="sort_num != null" >
        #{sort_num,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cck.model.system.SysRole" >
    update sys_role
    <set >
      <if test="role_code != null" >
        role_code = #{role_code,jdbcType=VARCHAR},
      </if>
      <if test="role_name != null" >
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="sort_num != null" >
        sort_num = #{sort_num,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cck.model.system.SysRole" >
    update sys_role
    set role_code = #{role_code,jdbcType=VARCHAR},
      role_name = #{role_name,jdbcType=VARCHAR},
      sort_num = #{sort_num,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      parent_id = #{parent_id,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>